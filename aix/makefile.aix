CC=cc
CFLAGS=-O3 -qtune=604 -qarch=ppc -qcpluscmt -I/usr/include/UMS -I/usr/lpp/som/include
LDFLAGS=-O3 -qtune=604 -qarch=ppc
#CFLAGS=-g -qcpluscmt -I/usr/include/UMS -I/usr/lpp/som/include
#LDFLAGS=-g
LIBS=-lm -lUMSobj
O=aix
DMASIMLIBS=

OUTPUT=	sym_$(O) dmasim dfbquake xquake

all:	$(OUTPUT)

clean:
	rm -f *.o $(OUTPUT)

%.o : %.s
	$(CC) $(CFLAGS) -DELF -x assembler-with-cpp -c $<

HEADERS = asm_draw.h client.h cmd.h common.h cvar.h d_iface.h\
         d_local.h mathlib.h model.h modelgen.h net.h quakeasm.h\
         quakedef.h spritegn.h zone.h crc.h net_vcr.h wad.h sbar.h\
         world.h

PORTABLE_OBJS= \
 console.o \
 r_light.o \
 r_misc.o \
 pr_cmds.o \
 cd_null.o \
 menu.o \
 draw.o \
 cl_demo.o \
 cl_input.o \
 keys.o \
 cl_main.o \
 cl_parse.o \
 cl_tent.o \
 cmd.o \
 common.o \
 crc.o \
 cvar.o \
 d_edge.o \
 d_fill.o \
 d_init.o \
 d_modech.o \
 d_part.o \
 d_polyse.o \
 d_scan.o \
 d_sky.o \
 d_sprite.o \
 d_surf.o \
 d_zpoint.o \
 host.o \
 host_cmd.o \
 mathlib.o \
 model.o \
 net_main.o \
 net_vcr.o \
 pr_edict.o \
 pr_exec.o \
 r_aclip.o \
 r_efrag.o \
 r_alias.o \
 r_bsp.o \
 r_draw.o \
 r_edge.o \
 r_main.o \
 r_part.o \
 r_sky.o \
 r_sprite.o \
 r_surf.o \
 r_vars.o \
 sbar.o \
 screen.o \
 sv_main.o \
 sv_move.o \
 sv_phys.o \
 sv_user.o \
 view.o \
 wad.o \
 world.o \
 zone.o

AIX_OBJS= \
 d_vars.o \
 sys_aix.o \
 net_bsd.o \
 net_dgrm.o \
 net_loop.o \
 net_udp.o \
 nonintel.o \
 snd_aix.o \
 snd_dma.o \
 snd_mem.o \
 snd_mix.o

OBJS=$(PORTABLE_OBJS) $(AIX_OBJS)

sym_$(O):	dfbquake
	nm dfbquake > sym_$(O)

start_squake: ../start_squake
	cp ../start_squake $(LOCAL)

dfbquake:	$(OBJS) vid_dfb.o in_null.o
	$(CC) $(LDFLAGS) -L/usr/lpp/X11/Xamples/extensions/lib $(OBJS) vid_dfb.o in_null.o -o dfbquake $(LIBS) -lXextSam -lX11 -lXdfb -lXext

xquake:	$(OBJS) vid_x.o in_null.o
	$(CC) $(LDFLAGS) -L/usr/lpp/X11/Xamples/extensions/lib $(OBJS) vid_x.o in_null.o -o xquake $(LIBS) -lXextSam -lX11 -lXext

tests2:	tests2.o sys_$(O).o wad.o zone.o common.o sizebuf.o snd_dma.o
	$(CC) $(CFLAGS) tests2.o sys_linux.o wad.o zone.o \
		common.o sizebuf.o snd_dma.o -o tests2 -lm

dmasim:	dmasim.o dmasim_$(O).o quakedef.h
	$(CC) $(LDFLAGS) dmasim.o dmasim_$(O).o -o dmasim $(DMASIMLIBS)

tests:	tests.c
	$(CC) $(CFLAGS) tests.c -o tests -lm

$(OBJS) dmasim:	$(HEADERS)

